apiVersion: v1
kind: ConfigMap
metadata:
  name: metricbeat-config
  namespace: remotehive-monitoring
  labels:
    app: metricbeat
data:
  metricbeat.yml: |
    metricbeat.config.modules:
      # Mounted `metricbeat-daemonset-modules` configmap:
      path: ${path.config}/modules.d/*.yml
      # Reload module configs as they change:
      reload.enabled: false
    
    metricbeat.autodiscover:
      providers:
        - type: kubernetes
          scope: cluster
          node: ${NODE_NAME}
          unique: true
          templates:
            - config:
                - module: kubernetes
                  hosts: ["kube-state-metrics:8080"]
                  period: 10s
                  add_metadata: true
                  metricsets:
                    - state_node
                    - state_deployment
                    - state_daemonset
                    - state_replicaset
                    - state_pod
                    - state_container
                    - state_cronjob
                    - state_resourcequota
                    - state_statefulset
                    - state_service
            - config:
                - module: kubernetes
                  metricsets:
                    - apiserver
                  hosts: ["https://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}"]
                  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
                  ssl.certificate_authorities:
                    - /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                  period: 30s
        - type: kubernetes
          scope: node
          node: ${NODE_NAME}
          templates:
            - config:
                - module: kubernetes
                  metricsets:
                    - node
                    - system
                    - pod
                    - container
                    - volume
                  period: 10s
                  host: ${NODE_NAME}
                  hosts: ["https://${NODE_NAME}:10250"]
                  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
                  ssl.verification_mode: "none"
            - config:
                - module: system
                  period: 10s
                  metricsets:
                    - cpu
                    - load
                    - memory
                    - network
                    - process
                    - process_summary
                    - uptime
                    - socket_summary
                    - core
                    - diskio
                    - filesystem
                    - fsstat
                    - raid
                    - socket
                    - service
                  processes: ['.*']
                  process.include_top_n:
                    by_cpu: 5      # include top 5 processes by CPU
                    by_memory: 5   # include top 5 processes by memory
            - config:
                - module: docker
                  metricsets:
                    - "container"
                    - "cpu"
                    - "diskio"
                    - "healthcheck"
                    - "info"
                    - "image"
                    - "memory"
                    - "network"
                  hosts: ["unix:///var/run/docker.sock"]
                  period: 10s
                  enabled: true
        - type: kubernetes
          templates:
            - condition:
                contains:
                  kubernetes.labels.app: "remotehive-backend"
              config:
                - module: http
                  metricsets: ["json"]
                  period: 30s
                  hosts: ["${data.host}:8000"]
                  namespace: "remotehive.backend"
                  path: "/health"
                  method: "GET"
            - condition:
                contains:
                  kubernetes.labels.app: "remotehive-autoscraper"
              config:
                - module: http
                  metricsets: ["json"]
                  period: 30s
                  hosts: ["${data.host}:8001"]
                  namespace: "remotehive.autoscraper"
                  path: "/health"
                  method: "GET"
            - condition:
                contains:
                  kubernetes.labels.app: "mongodb"
              config:
                - module: mongodb
                  metricsets: ["dbstats", "status", "collstats", "metrics", "replstatus"]
                  period: 10s
                  hosts: ["${data.host}:27017"]
            - condition:
                contains:
                  kubernetes.labels.app: "redis"
              config:
                - module: redis
                  metricsets: ["info", "keyspace"]
                  period: 10s
                  hosts: ["${data.host}:6379"]
            - condition:
                contains:
                  kubernetes.labels.app: "nginx"
              config:
                - module: nginx
                  metricsets: ["stubstatus"]
                  period: 10s
                  hosts: ["http://${data.host}/nginx_status"]
                  server_status_path: "/nginx_status"
    
    processors:
      - add_cloud_metadata:
      - add_host_metadata:
          when.not.contains.tags: forwarded
      - add_docker_metadata:
      - add_kubernetes_metadata:
          host: ${NODE_NAME}
          matchers:
          - logs_path:
              logs_path: "/var/log/containers/"
      - drop_event:
          when:
            or:
              - contains:
                  metricset.name: "container"
              - contains:
                  kubernetes.container.name: "pause"
    
    output.elasticsearch:
      hosts: ['${ELASTICSEARCH_HOST:elasticsearch}:${ELASTICSEARCH_PORT:9200}']
      indices:
        - index: "metricbeat-kubernetes-%{+yyyy.MM.dd}"
          when.contains:
            metricset.module: "kubernetes"
        - index: "metricbeat-system-%{+yyyy.MM.dd}"
          when.contains:
            metricset.module: "system"
        - index: "metricbeat-docker-%{+yyyy.MM.dd}"
          when.contains:
            metricset.module: "docker"
        - index: "metricbeat-remotehive-%{+yyyy.MM.dd}"
          when.or:
            - contains:
                metricset.namespace: "remotehive.backend"
            - contains:
                metricset.namespace: "remotehive.autoscraper"
        - index: "metricbeat-%{[agent.version]}-%{+yyyy.MM.dd}"
    
    setup.template.settings:
      index.number_of_shards: 1
      index.codec: best_compression
      _source.enabled: true
    
    setup.kibana:
      host: "kibana:5601"
    
    logging.level: info
    logging.to_files: true
    logging.files:
      path: /var/log/metricbeat
      name: metricbeat
      keepfiles: 7
      permissions: 0644
    
    http.enabled: true
    http.host: 0.0.0.0
    http.port: 5067
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: metricbeat-daemonset-modules
  namespace: remotehive-monitoring
  labels:
    app: metricbeat
data:
  system.yml: |
    - module: system
      period: 10s
      metricsets:
        - cpu
        - load
        - memory
        - network
        - process
        - process_summary
        - uptime
        - socket_summary
      processes: ['.*']
      process.include_top_n:
        by_cpu: 5      # include top 5 processes by CPU
        by_memory: 5   # include top 5 processes by memory
    
    - module: system
      period: 1m
      metricsets:
        - filesystem
        - fsstat
      processors:
      - drop_event:
          when.regexp:
            system.filesystem.mount_point: '^/(sys|proc|dev|hosts|etc)($|/)'
    
    - module: system
      period: 15m
      metricsets:
        - uptime
  
  docker.yml: |
    - module: docker
      metricsets:
        - "container"
        - "cpu"
        - "diskio"
        - "healthcheck"
        - "info"
        - "image"
        - "memory"
        - "network"
      hosts: ["unix:///var/run/docker.sock"]
      period: 10s
      enabled: true
  
  kubernetes.yml: |
    - module: kubernetes
      period: 10s
      host: ${NODE_NAME}
      hosts: ["https://${NODE_NAME}:10250"]
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      ssl.verification_mode: "none"
      metricsets:
        - node
        - system
        - pod
        - container
        - volume
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: metricbeat
  namespace: remotehive-monitoring
  labels:
    app: metricbeat
spec:
  selector:
    matchLabels:
      app: metricbeat
  template:
    metadata:
      labels:
        app: metricbeat
    spec:
      serviceAccountName: metricbeat
      terminationGracePeriodSeconds: 30
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: metricbeat
        image: docker.elastic.co/beats/metricbeat:8.11.0
        args: [
          "-c", "/etc/metricbeat.yml",
          "-e",
          "-system.hostfs=/hostfs",
        ]
        env:
        - name: ELASTICSEARCH_HOST
          value: elasticsearch
        - name: ELASTICSEARCH_PORT
          value: "9200"
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        securityContext:
          runAsUser: 0
          # If using Red Hat OpenShift uncomment this:
          #privileged: true
        resources:
          limits:
            memory: 200Mi
            cpu: 100m
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - name: config
          mountPath: /etc/metricbeat.yml
          readOnly: true
          subPath: metricbeat.yml
        - name: modules
          mountPath: /usr/share/metricbeat/modules.d
          readOnly: true
        - name: dockersock
          mountPath: /var/run/docker.sock
          readOnly: true
        - name: proc
          mountPath: /hostfs/proc
          readOnly: true
        - name: cgroup
          mountPath: /hostfs/sys/fs/cgroup
          readOnly: true
        livenessProbe:
          httpGet:
            path: /
            port: 5067
          initialDelaySeconds: 30
          timeoutSeconds: 15
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 5067
          initialDelaySeconds: 10
          timeoutSeconds: 15
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
      volumes:
      - name: proc
        hostPath:
          path: /proc
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
      - name: dockersock
        hostPath:
          path: /var/run/docker.sock
      - name: config
        configMap:
          defaultMode: 0640
          name: metricbeat-config
      - name: modules
        configMap:
          defaultMode: 0640
          name: metricbeat-daemonset-modules
      - name: data
        hostPath:
          path: /var/lib/metricbeat-data
          type: DirectoryOrCreate
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: metricbeat
rules:
- apiGroups: [""]
  resources:
  - nodes
  - namespaces
  - events
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups: ["extensions"]
  resources:
  - replicasets
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources:
  - statefulsets
  - deployments
  - replicasets
  verbs: ["get", "list", "watch"]
- apiGroups: ["batch"]
  resources:
  - jobs
  verbs: ["get", "list", "watch"]
- apiGroups: [""] 
  resources:
  - nodes/stats
  verbs:
  - get
- nonResourceURLs:
  - "/metrics"
  verbs:
  - get
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: metricbeat
  namespace: remotehive-monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: metricbeat
roleRef:
  kind: ClusterRole
  name: metricbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: metricbeat
  namespace: remotehive-monitoring
---
apiVersion: v1
kind: Service
metadata:
  name: metricbeat
  namespace: remotehive-monitoring
  labels:
    app: metricbeat
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '5067'
    prometheus.io/path: '/stats'
spec:
  type: ClusterIP
  ports:
  - port: 5067
    targetPort: 5067
    protocol: TCP
    name: monitoring
  selector:
    app: metricbeat
---
# Deployment for cluster-level metrics
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metricbeat-cluster
  namespace: remotehive-monitoring
  labels:
    app: metricbeat-cluster
spec:
  replicas: 1
  selector:
    matchLabels:
      app: metricbeat-cluster
  template:
    metadata:
      labels:
        app: metricbeat-cluster
    spec:
      serviceAccountName: metricbeat
      containers:
      - name: metricbeat
        image: docker.elastic.co/beats/metricbeat:8.11.0
        args: [
          "-c", "/etc/metricbeat.yml",
          "-e",
        ]
        env:
        - name: ELASTICSEARCH_HOST
          value: elasticsearch
        - name: ELASTICSEARCH_PORT
          value: "9200"
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        securityContext:
          runAsUser: 1000
        resources:
          limits:
            memory: 200Mi
            cpu: 100m
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - name: config
          mountPath: /etc/metricbeat.yml
          readOnly: true
          subPath: metricbeat.yml
        livenessProbe:
          httpGet:
            path: /
            port: 5067
          initialDelaySeconds: 30
          timeoutSeconds: 15
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 5067
          initialDelaySeconds: 10
          timeoutSeconds: 15
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
      volumes:
      - name: config
        configMap:
          defaultMode: 0640
          name: metricbeat-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: metricbeat-cluster-config
  namespace: remotehive-monitoring
  labels:
    app: metricbeat-cluster
data:
  metricbeat.yml: |
    metricbeat.modules:
    - module: kubernetes
      enabled: true
      metricsets:
        - state_node
        - state_deployment
        - state_daemonset
        - state_replicaset
        - state_pod
        - state_container
        - state_cronjob
        - state_resourcequota
        - state_statefulset
        - state_service
      period: 10s
      host: ${NODE_NAME}
      hosts: ["kube-state-metrics:8080"]
      add_metadata: true
    
    - module: kubernetes
      enabled: true
      metricsets:
        - apiserver
      hosts: ["https://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}"]
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      ssl.certificate_authorities:
        - /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      period: 30s
    
    # RemoteHive specific metrics
    - module: http
      metricsets: ["json"]
      period: 30s
      hosts: ["remotehive-backend:8000"]
      namespace: "remotehive.backend"
      path: "/metrics"
      method: "GET"
    
    - module: http
      metricsets: ["json"]
      period: 30s
      hosts: ["remotehive-autoscraper:8001"]
      namespace: "remotehive.autoscraper"
      path: "/metrics"
      method: "GET"
    
    processors:
      - add_cloud_metadata:
      - add_host_metadata:
          when.not.contains.tags: forwarded
      - add_kubernetes_metadata:
          host: ${NODE_NAME}
    
    output.elasticsearch:
      hosts: ['${ELASTICSEARCH_HOST:elasticsearch}:${ELASTICSEARCH_PORT:9200}']
      index: "metricbeat-cluster-%{+yyyy.MM.dd}"
    
    setup.template.settings:
      index.number_of_shards: 1
      index.codec: best_compression
    
    logging.level: info
    
    http.enabled: true
    http.host: 0.0.0.0
    http.port: 5067