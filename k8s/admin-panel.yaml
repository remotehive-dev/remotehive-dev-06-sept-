# Admin Panel Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: admin-panel
  namespace: remotehive
  labels:
    app: admin-panel
    tier: frontend
    version: "1.0"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: admin-panel
      tier: frontend
  template:
    metadata:
      labels:
        app: admin-panel
        tier: frontend
        version: "1.0"
    spec:
      initContainers:
      - name: wait-for-backend
        image: busybox:1.35
        command: ['sh', '-c']
        args:
        - |
          until nc -z backend-api 8000; do
            echo "Waiting for Backend API..."
            sleep 2
          done
          echo "Backend API is ready!"
      containers:
      - name: admin-panel
        image: remotehive/admin-panel:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: NODE_ENV
          value: "production"
        - name: NEXT_PUBLIC_API_URL
          value: "https://api.remotehive.com"
        - name: NEXT_PUBLIC_AUTOSCRAPER_URL
          value: "https://scraper.remotehive.com"
        - name: NEXTAUTH_URL
          valueFrom:
            configMapKeyRef:
              name: remotehive-config
              key: ADMIN_URL
        - name: NEXTAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: remotehive-secrets
              key: NEXTAUTH_SECRET
        - name: NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY
          value: "pk_test_your-clerk-publishable-key"
        - name: CLERK_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: remotehive-secrets
              key: CLERK_SECRET_KEY
        - name: NEXT_PUBLIC_APP_URL
          valueFrom:
            configMapKeyRef:
              name: remotehive-config
              key: ADMIN_URL
        volumeMounts:
        - name: logs
          mountPath: /backend/logs
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "250m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 30
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      volumes:
      - name: logs
        persistentVolumeClaim:
          claimName: logs-pvc
      restartPolicy: Always
---
# Admin Panel Service
apiVersion: v1
kind: Service
metadata:
  name: admin-panel
  namespace: remotehive
  labels:
    app: admin-panel
    tier: frontend
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: admin-panel
    tier: frontend
---
# Admin Panel Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: admin-panel-hpa
  namespace: remotehive
  labels:
    app: admin-panel
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: admin-panel
  minReplicas: 2
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 25
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 1
        periodSeconds: 60
      selectPolicy: Max
---
# Admin Panel Pod Disruption Budget
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: admin-panel-pdb
  namespace: remotehive
  labels:
    app: admin-panel
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: admin-panel
      tier: frontend
---
# Admin Panel Health Check Service
apiVersion: v1
kind: Service
metadata:
  name: admin-panel-health
  namespace: remotehive
  labels:
    app: admin-panel
    component: health
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
    name: health
  selector:
    app: admin-panel
    tier: frontend