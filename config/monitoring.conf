# RemoteHive Monitoring Configuration
# This file contains configuration settings for the monitoring system

# =============================================================================
# GENERAL SETTINGS
# =============================================================================

[general]
# Enable/disable monitoring
enabled = true

# Monitoring interval in seconds
check_interval = 300

# Log level (DEBUG, INFO, WARN, ERROR)
log_level = INFO

# Maximum number of concurrent checks
max_concurrent_checks = 10

# Timeout for individual checks in seconds
check_timeout = 30

# Data retention period in days
data_retention_days = 30

# =============================================================================
# SYSTEM MONITORING
# =============================================================================

[system]
# CPU monitoring
cpu_enabled = true
cpu_threshold_warning = 80
cpu_threshold_critical = 95
cpu_check_interval = 60

# Memory monitoring
memory_enabled = true
memory_threshold_warning = 85
memory_threshold_critical = 95
memory_check_interval = 60

# Disk monitoring
disk_enabled = true
disk_threshold_warning = 85
disk_threshold_critical = 95
disk_check_interval = 300
disk_partitions = /, /var, /tmp, /opt

# Load average monitoring
load_enabled = true
load_threshold_warning = 5.0
load_threshold_critical = 10.0
load_check_interval = 60

# Network monitoring
network_enabled = true
network_interfaces = eth0, lo
network_check_interval = 300

# Process monitoring
process_enabled = true
process_check_interval = 120

# =============================================================================
# SERVICE MONITORING
# =============================================================================

[services]
# Backend services (systemd)
backend_services = remotehive-backend, remotehive-autoscraper
backend_check_interval = 60

# Frontend services (PM2)
frontend_services = remotehive-admin, remotehive-public
frontend_check_interval = 60

# Web server
web_server = nginx
web_server_check_interval = 120

# Database
database_service = postgresql
database_check_interval = 120

# Cache
cache_service = redis
cache_check_interval = 180

# =============================================================================
# PORT MONITORING
# =============================================================================

[ports]
# Application ports to monitor
ports = 80, 443, 3000, 5173, 8000, 8001
port_check_interval = 120
port_timeout = 10

# Database ports
database_ports = 5432
database_port_check_interval = 300

# Cache ports
cache_ports = 6379
cache_port_check_interval = 300

# =============================================================================
# HEALTH CHECK MONITORING
# =============================================================================

[health_checks]
# Enable health check monitoring
enabled = true
check_interval = 180
timeout = 10
retries = 3
retry_delay = 5

# Health check endpoints
endpoints = http://localhost:8000/health, http://localhost:8001/health, http://localhost:3000, http://localhost:5173

# Expected response codes
expected_codes = 200, 201, 204

# Response time thresholds (milliseconds)
response_time_warning = 5000
response_time_critical = 10000

# =============================================================================
# DATABASE MONITORING
# =============================================================================

[database]
# Database connection monitoring
connection_enabled = true
connection_check_interval = 300
connection_timeout = 30

# Database performance monitoring
performance_enabled = true
performance_check_interval = 600

# Connection pool monitoring
pool_enabled = true
pool_warning_threshold = 80
pool_critical_threshold = 95

# Query performance monitoring
query_monitoring_enabled = true
slow_query_threshold = 1000  # milliseconds

# Database size monitoring
size_monitoring_enabled = true
size_warning_threshold = 10240  # MB (10GB)
size_critical_threshold = 20480  # MB (20GB)

# =============================================================================
# REDIS MONITORING
# =============================================================================

[redis]
# Redis connection monitoring
connection_enabled = true
connection_check_interval = 300
connection_timeout = 10

# Redis performance monitoring
performance_enabled = true
performance_check_interval = 600

# Memory usage monitoring
memory_warning_threshold = 512  # MB
memory_critical_threshold = 1024  # MB

# Connection monitoring
connection_warning_threshold = 100
connection_critical_threshold = 200

# =============================================================================
# LOG MONITORING
# =============================================================================

[logs]
# Enable log monitoring
enabled = true
check_interval = 300

# Log files to monitor
log_files = /var/log/nginx/error.log, /var/log/remotehive/app.log, /var/log/remotehive/autoscraper.log, /var/log/syslog

# Error patterns to detect
error_patterns = ERROR, CRITICAL, FATAL, Exception, Traceback

# Warning patterns
warning_patterns = WARNING, WARN

# Error rate thresholds (errors per hour)
error_rate_warning = 50
error_rate_critical = 100

# Log file size monitoring
max_log_size = 100  # MB

# =============================================================================
# SSL CERTIFICATE MONITORING
# =============================================================================

[ssl]
# Enable SSL certificate monitoring
enabled = true
check_interval = 86400  # Daily

# Domains to monitor
domains = remotehive.com, admin.remotehive.com, api.remotehive.com

# Certificate expiry thresholds (days)
expiry_warning_threshold = 30
expiry_critical_threshold = 7

# Certificate validation
validate_chain = true
validate_hostname = true

# =============================================================================
# SECURITY MONITORING
# =============================================================================

[security]
# Enable security monitoring
enabled = true
check_interval = 300

# Failed login monitoring
failed_login_threshold = 10
failed_login_window = 300  # 5 minutes

# Brute force detection
brute_force_threshold = 20
brute_force_window = 600  # 10 minutes

# Suspicious activity patterns
suspicious_patterns = "SQL injection", "XSS attempt", "Directory traversal"

# File integrity monitoring
file_integrity_enabled = true
monitored_directories = /opt/remotehive, /etc/nginx, /etc/systemd/system
file_check_interval = 3600  # Hourly

# =============================================================================
# BUSINESS METRICS MONITORING
# =============================================================================

[business_metrics]
# Enable business metrics monitoring
enabled = true
check_interval = 600  # 10 minutes

# Scraping metrics
scraping_success_rate_threshold = 80  # percentage
jobs_scraped_threshold = 10  # per hour

# User activity metrics
active_users_threshold = 5  # per hour
api_requests_threshold = 100  # per hour

# Error rate monitoring
api_error_rate_threshold = 5  # percentage

# =============================================================================
# ALERT CONFIGURATION
# =============================================================================

[alerts]
# Enable alerting
enabled = true

# Alert cooldown period (seconds)
cooldown_period = 300

# Maximum alerts per hour
max_alerts_per_hour = 20

# Alert channels
email_enabled = true
slack_enabled = true
sms_enabled = false
webhook_enabled = false

# Email settings
email_smtp_server = smtp.gmail.com
email_smtp_port = 587
email_from = alerts@remotehive.com
email_to = admin@remotehive.com, devops@remotehive.com

# Slack settings
slack_webhook_url = ${SLACK_WEBHOOK_URL}
slack_channel = #alerts
slack_username = RemoteHive Monitor

# =============================================================================
# METRICS STORAGE
# =============================================================================

[metrics]
# Enable metrics collection
enabled = true

# Metrics storage directory
storage_directory = /var/lib/remotehive/metrics

# Metrics retention
retention_days = 30

# Metrics aggregation intervals
aggregation_intervals = 1m, 5m, 15m, 1h, 1d

# Metrics export
export_enabled = false
export_format = prometheus
export_endpoint = http://localhost:9090/metrics

# =============================================================================
# REPORTING
# =============================================================================

[reporting]
# Enable reporting
enabled = true

# Report generation interval
report_interval = 86